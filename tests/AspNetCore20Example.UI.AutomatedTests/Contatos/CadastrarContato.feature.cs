// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AspNetCore20Example.UI.AutomatedTests.Contatos
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class CadastrarContatoFeature : Xunit.IClassFixture<CadastrarContatoFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "CadastrarContato.feature"
#line hidden
        
        public CadastrarContatoFeature(CadastrarContatoFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "Cadastrar contato", "\tUm usuário fará login no site e\r\n\tirá adicionar seus contatos", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Adicionar Novo Contato")]
        [Xunit.TraitAttribute("FeatureTitle", "Cadastrar contato")]
        [Xunit.TraitAttribute("Description", "Adicionar Novo Contato")]
        [Xunit.TraitAttribute("Category", "TestesAutomatizadosNovoContato")]
        public virtual void AdicionarNovoContato()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Adicionar Novo Contato", new string[] {
                        "TestesAutomatizadosNovoContato"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("que o usuário está no site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 9
 testRunner.And("realiza o Login", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 10
 testRunner.And("navega até a lista de contatos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 11
 testRunner.And("clica em novo contato", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Campo",
                        "Valor"});
            table1.AddRow(new string[] {
                        "nome",
                        "Contato 01"});
            table1.AddRow(new string[] {
                        "email",
                        "contato01@teste.com"});
            table1.AddRow(new string[] {
                        "//*[@id=\"dataNascimento\"]/div/div/input",
                        "15/04/1997"});
            table1.AddRow(new string[] {
                        "logradouro",
                        "av. das nações"});
            table1.AddRow(new string[] {
                        "numero",
                        "123"});
            table1.AddRow(new string[] {
                        "complemento",
                        "ap. 34"});
            table1.AddRow(new string[] {
                        "bairro",
                        "centro"});
            table1.AddRow(new string[] {
                        "cep",
                        "14810112"});
            table1.AddRow(new string[] {
                        "cidade",
                        "Araraquara"});
            table1.AddRow(new string[] {
                        "estado",
                        "SP"});
#line 12
 testRunner.And("preenche o formulário com os valores", ((string)(null)), table1, "E ");
#line 24
 testRunner.When("clicar no botao Criar", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 25
 testRunner.Then("O contato é registrado e o usuario redirecionado para a edição do contato", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                CadastrarContatoFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                CadastrarContatoFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
